{"ast":null,"code":"var _jsxFileName = \"/Users/kamila/react-app/src/components/Button.jsx\";\nimport React from \"react\";\nimport \"./Button.css\";\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isOperator = val => {\n      return !isNaN(val) || val === \".\" || val === \"=\" || val === \"CE\";\n    };\n\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleButtonClick() {\n    this.props.handleClick(this.props.children);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: `button  ${this.isOperator(this.props.children) ? \" \" : \"operator\"}`,\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default Button;","map":{"version":3,"sources":["/Users/kamila/react-app/src/components/Button.jsx"],"names":["React","Button","Component","constructor","props","isOperator","val","isNaN","handleButtonClick","bind","handleClick","children","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAInBC,UAJmB,GAINC,GAAG,IAAI;AAClB,aAAO,CAACC,KAAK,CAACD,GAAD,CAAN,IAAeA,GAAG,KAAK,GAAvB,IAA8BA,GAAG,KAAK,GAAtC,IAA6CA,GAAG,KAAK,IAA5D;AACD,KANkB;;AAEjB,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAKDD,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWM,WAAX,CAAuB,KAAKN,KAAL,CAAWO,QAAlC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAG,WACV,KAAKP,UAAL,CAAgB,KAAKD,KAAL,CAAWO,QAA3B,IAAuC,GAAvC,GAA6C,UAC9C,EAHH;AAIE,MAAA,OAAO,EAAE,KAAKH,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKJ,KAAL,CAAWO,QANd,CADF;AAUD;;AAxBkC;;AA0BrC,eAAeV,MAAf","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n  isOperator = val => {\n    return !isNaN(val) || val === \".\" || val === \"=\" || val === \"CE\";\n  };\n\n  handleButtonClick() {\n    this.props.handleClick(this.props.children);\n  }\n\n  render() {\n    return (\n      <div\n        className={`button  ${\n          this.isOperator(this.props.children) ? \" \" : \"operator\"\n        }`}\n        onClick={this.handleButtonClick}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}